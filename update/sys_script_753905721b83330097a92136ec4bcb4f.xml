<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//Instantiate the NeedItUtils class. Call rge isDatePast method and pass the u_when_needed value
	var niutils = new NeedItUtils();
	var isPast = niutils.isDatePast(current.u_when_needed);
	var isSameDay = niutils.isDateToday(current.u_when_needed);
	
	if(isSameDay == true){
		gs.addErrorMessage("You cant add a task on the same day");
		current.setAbortAction(true);
	}
	
	if(isPast == true && !isSameDay){
		gs.addErrorMessage("The date you have entered is before the current date");
		current.setAbortAction(true);
	}
	
	
// 	//rightnow stores current time
// 	var rightNow = new GlideDateTime();
// 	//Create object for whenNeeded time
// 	var whenNeededTime = new GlideDateTime(current.u_when_needed);
// 	//Store the date today
// 	var rightNowDate = new GlideDateTime().getDate();
// 	//Get the date today 
// 	var whenNeededDate = new GlideDateTime(current.u_when_needed).getDate();
	
// 	//If the when date is before current date, don't write to DB
// 	if(whenNeededTime.before(rightNow) && !whenNeededDate.equals(rightNowDate)){
// 		gs.addErrorMessage('Date cannot be in the past');
// 		current.setAbortAction(true);
// 	}
	
// 	//Check if the date is on teh same day
// 	if(whenNeededDate.equals(rightNowDate)){
// 		gs.addErrorMessage('Can\'t add task on the same day');
// 		current.setAbortAction(true);
// 	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-08-07 12:19:44</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>753905721b83330097a92136ec4bcb4f</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_753905721b83330097a92136ec4bcb4f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-08-07 15:14:56</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=753905721b83330097a92136ec4bcb4f"/>
</record_update>
